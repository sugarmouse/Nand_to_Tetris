// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address[9..11], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    And(a=a, b=load, out=load0);
    And(a=b, b=load, out=load1);
    And(a=c, b=load, out=load2);
    And(a=d, b=load, out=load3);
    And(a=e, b=load, out=load4);
    And(a=f, b=load, out=load5);
    And(a=g, b=load, out=load6);
    And(a=h, b=load, out=load7);

    RAM512(in=in, load=load0, address=address[0..8], out=a1);
    RAM512(in=in, load=load1, address=address[0..8], out=b1);
    RAM512(in=in, load=load2, address=address[0..8], out=c1);
    RAM512(in=in, load=load3, address=address[0..8], out=d1);
    RAM512(in=in, load=load4, address=address[0..8], out=e1);
    RAM512(in=in, load=load5, address=address[0..8], out=f1);
    RAM512(in=in, load=load6, address=address[0..8], out=g1);
    RAM512(in=in, load=load7, address=address[0..8], out=h1);

    Mux8Way16(a=a1, b=b1, c=c1, d=d1, e=e1, f=f1, g=g1, h=h1, sel=address[9..11], out=out);

}